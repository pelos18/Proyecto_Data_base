-- 1. CREACIÓN DE TABLAS
CREATE TABLE USUARIOS (
    id_usuario NUMBER(10) NOT NULL PRIMARY KEY,
    usuario VARCHAR2(50) NOT NULL UNIQUE,
    password VARCHAR2(255) NOT NULL,
    nombre VARCHAR2(100) NOT NULL,
    rol VARCHAR2(20) NOT NULL CHECK (rol IN ('dueño', 'administrativo', 'vendedor')),
    activo NUMBER(1) DEFAULT 1 NOT NULL
);

CREATE TABLE CLIENTES (
    id_cliente NUMBER(10) NOT NULL PRIMARY KEY,
    nombre VARCHAR2(150) NOT NULL,
    telefono VARCHAR2(20),
    email VARCHAR2(100),
    direccion VARCHAR2(255)
);

CREATE TABLE PROVEEDORES (
    id_proveedor NUMBER(10) NOT NULL PRIMARY KEY,
    nombre VARCHAR2(150) NOT NULL,
    telefono VARCHAR2(20),
    direccion VARCHAR2(255)
);

CREATE TABLE CATEGORIAS (
    id_categoria NUMBER(10) NOT NULL PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL UNIQUE,
    descripcion VARCHAR2(255)
);

CREATE TABLE MARCAS (
    id_marca NUMBER(10) NOT NULL PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE PRODUCTOS (
    id_producto NUMBER(10) NOT NULL PRIMARY KEY,
    codigo_barras VARCHAR2(100) UNIQUE,
    nombre VARCHAR2(150) NOT NULL,
    descripcion VARCHAR2(255),
    id_categoria NUMBER(10) NOT NULL,
    id_marca NUMBER(10) NOT NULL,
    stock_minimo NUMBER(10) DEFAULT 0 NOT NULL,
    stock_actual NUMBER(10) DEFAULT 0 NOT NULL,
    activo NUMBER(1) DEFAULT 1 NOT NULL
);

CREATE TABLE LOTES_INVENTARIO (
    id_lote NUMBER(10) NOT NULL PRIMARY KEY,
    id_producto NUMBER(10) NOT NULL,
    id_proveedor NUMBER(10) NOT NULL,
    cantidad NUMBER(10) NOT NULL,
    precio_compra NUMBER(10, 2) NOT NULL,
    precio_venta NUMBER(10, 2) NOT NULL,
    fecha_ingreso DATE DEFAULT SYSDATE NOT NULL,
    fecha_caducidad DATE
);

CREATE TABLE VENTAS (
    id_venta NUMBER(10) NOT NULL PRIMARY KEY,
    id_cliente NUMBER(10),
    id_usuario NUMBER(10) NOT NULL,
    fecha_venta DATE DEFAULT SYSDATE NOT NULL,
    total NUMBER(12, 2) DEFAULT 0 NOT NULL,
    estado VARCHAR2(20) DEFAULT 'PENDIENTE' NOT NULL
);

CREATE TABLE DETALLE_VENTAS (
    id_detalle NUMBER(10) NOT NULL PRIMARY KEY,
    id_venta NUMBER(10) NOT NULL,
    id_lote NUMBER(10) NOT NULL,
    cantidad NUMBER(10) NOT NULL,
    precio_unitario NUMBER(10, 2) NOT NULL
);

CREATE TABLE CAJA (
    id_caja NUMBER(10) NOT NULL PRIMARY KEY,
    id_usuario NUMBER(10) NOT NULL,
    fecha DATE NOT NULL,
    saldo_inicial NUMBER(12, 2) DEFAULT 0 NOT NULL,
    ingresos NUMBER(12, 2) DEFAULT 0 NOT NULL,
    egresos NUMBER(12, 2) DEFAULT 0 NOT NULL,
    saldo_final AS (saldo_inicial + ingresos - egresos)
);

CREATE TABLE NOTIFICACIONES (
    id_notificacion NUMBER(10) NOT NULL PRIMARY KEY,
    id_usuario NUMBER(10) NOT NULL,
    id_producto NUMBER(10),
    tipo VARCHAR2(50) NOT NULL,
    mensaje VARCHAR2(255) NOT NULL,
    fecha_creacion DATE DEFAULT SYSDATE NOT NULL,
    leida NUMBER(1) DEFAULT 0 NOT NULL
);

-- 2. CREACIÓN DE SECUENCIAS
CREATE SEQUENCE SEQ_USUARIOS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_CLIENTES START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_PROVEEDORES START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_CATEGORIAS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_MARCAS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_PRODUCTOS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_LOTES_INVENTARIO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_VENTAS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_DETALLE_VENTAS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_CAJA START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_NOTIFICACIONES START WITH 1 INCREMENT BY 1;

-- 3. CREACIÓN DE RESTRICCIONES (Claves Foráneas)
ALTER TABLE PRODUCTOS ADD CONSTRAINT FK_PRODUCTOS_CATEGORIA FOREIGN KEY (id_categoria) REFERENCES CATEGORIAS(id_categoria);
ALTER TABLE PRODUCTOS ADD CONSTRAINT FK_PRODUCTOS_MARCA FOREIGN KEY (id_marca) REFERENCES MARCAS(id_marca);
ALTER TABLE LOTES_INVENTARIO ADD CONSTRAINT FK_LOTES_PRODUCTO FOREIGN KEY (id_producto) REFERENCES PRODUCTOS(id_producto);
ALTER TABLE LOTES_INVENTARIO ADD CONSTRAINT FK_LOTES_PROVEEDOR FOREIGN KEY (id_proveedor) REFERENCES PROVEEDORES(id_proveedor);
ALTER TABLE VENTAS ADD CONSTRAINT FK_VENTAS_CLIENTE FOREIGN KEY (id_cliente) REFERENCES CLIENTES(id_cliente);
ALTER TABLE VENTAS ADD CONSTRAINT FK_VENTAS_USUARIO FOREIGN KEY (id_usuario) REFERENCES USUARIOS(id_usuario);
ALTER TABLE DETALLE_VENTAS ADD CONSTRAINT FK_DETALLE_VENTA FOREIGN KEY (id_venta) REFERENCES VENTAS(id_venta);
ALTER TABLE DETALLE_VENTAS ADD CONSTRAINT FK_DETALLE_LOTE FOREIGN KEY (id_lote) REFERENCES LOTES_INVENTARIO(id_lote);
ALTER TABLE CAJA ADD CONSTRAINT FK_CAJA_USUARIO FOREIGN KEY (id_usuario) REFERENCES USUARIOS(id_usuario);
ALTER TABLE NOTIFICACIONES ADD CONSTRAINT FK_NOTIF_USUARIO FOREIGN KEY (id_usuario) REFERENCES USUARIOS(id_usuario);
ALTER TABLE NOTIFICACIONES ADD CONSTRAINT FK_NOTIF_PRODUCTO FOREIGN KEY (id_producto) REFERENCES PRODUCTOS(id_producto);

-- 4. RESTRICCIONES ADICIONALES
ALTER TABLE VENTAS ADD CONSTRAINT CHK_VENTAS_ESTADO CHECK (estado IN ('PENDIENTE', 'ACEPTADA', 'CANCELADA', 'DEVUELTA'));
ALTER TABLE LOTES_INVENTARIO ADD CONSTRAINT CHK_CANTIDAD_POSITIVA CHECK (cantidad >= 0);